%% https://github.com/inaka/elvis_core/wiki/Rules
[{elvis,
    [{config,
        [
            #{dirs => ["src", "src/**", "test", "test/**"],
                filter => "*.erl",
                rules =>
                [
%%                    {elvis_style, line_length,
%%                        #{ignore => [],
%%                            limit => 100,
%%                            skip_comments => false}},
                    {elvis_style, no_tabs},
                    {elvis_style, no_trailing_whitespace, #{ignore_empty_lines => false}},
                    {elvis_style, macro_names, #{ignore => []}},
%%                    {elvis_style, macro_module_names},
                    {
                        elvis_style,
                        operator_spaces,
                        #{rules =>
                            [
                                {right, ","},
                                {right, "--"},
                                {left, "--"},
                                {right, "++"},
                                {left, "++"}
                            ]}
                    },
                    {elvis_style, nesting_level, #{level => 3, ignore => []}},
                    {elvis_style, god_modules,
                        #{limit => 25,
                            ignore => []}},
%%                    TODO Maybe consider removing if expressions in the future
%%                    {elvis_style, no_if_expression},
                    {elvis_style, no_nested_try_catch, #{ignore => []}},
%%                    {elvis_style, invalid_dynamic_call,
%%                        #{ignore => []}},
                    {elvis_style, used_ignored_variable, #{ignore => []}},
                    {elvis_style, no_behavior_info},
                    {
                        elvis_style,
                        module_naming_convention,
                        #{regex => "^[a-z]([a-z0-9]*_?)*(_SUITE)?$",
                            ignore => []}
                    },
                    {
                        elvis_style,
                        function_naming_convention,
                        #{regex => "^([a-z][a-z0-9]*_?)*$",
%%                            TODO Can be added back once functions are renamed
                            ignore => [antidote_crdt_counter_b, crdt_properties, prop_map_go, prop_map_rr, prop_register_lww, prop_set_aw, prop_set_rw]}
                    },
                    {
                        elvis_style,
                        variable_naming_convention,
%%                        TODO Can be added back once variables are renamed
                        #{regex => "^_?([A-Z][0-9a-zA-Z]*)$",
                            ignore => [antidote_crdt_set_aw]}
                    },
                    {elvis_style, state_record_and_type},
                    {elvis_style, no_spec_with_records},
%%                    TODO Cound be a useful check in the future
%%                    {elvis_style, dont_repeat_yourself, #{min_complexity => 10}},
%%                    {elvis_style, max_module_length, #{max_length => 500, ignore => [], count_comments => false, count_whitespace => false}},
%%                    {elvis_style, max_function_length, #{max_length => 30,
%%                        count_comments => false,
%%                        count_whitespace => false,
%%                        ignore_functions => []}},
%%                    {elvis_style, no_call, #{ignore => [], no_call_functions => []}},
                    {elvis_style, no_common_caveats_call, #{ignore => [],
                        caveat_functions => [{timer, send_after,2},
                            {timer, send_after,3},
                            {timer, send_interval,2},
                            {timer, send_interval,3},
                            {erlang, size, 1}]}},
                    {elvis_style, no_debug_call, #{ignore => [],
                        debug_functions => [{ct, pal}, {ct, print}, {io, format, 1}, {io, format, 2}]}}
                ]
            },
            #{dirs => ["."],
                filter => "Makefile",
                ruleset => makefiles
            },
            #{dirs => ["."],
                filter => "rebar.config",
                ruleset => rebar_config
            },
            #{dirs => ["."],
                filter => "elvis.config",
                ruleset => elvis_config
            }
        ]},
        {verbose, true}]
}].
